/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.DiliverySystem.View.Manager;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import lk.ijse.DiliverSystem.dto.LasetOrderSaveDTO;
import lk.ijse.DilverSystem.controller.ManageLastOrderSaveController;
import lk.ijse.DilverSystem.controller.MangeCallSenterController;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author Viraj jayasanka
 */
public class SaveOrdersDitels extends javax.swing.JPanel {
  private DefaultTableModel dtmCustomer;
    /**
     * Creates new form SaveOrdersDitels
     */
    public SaveOrdersDitels() {
        initComponents();
     loadAllDateSave();
   
       // dtmCustomer = (DefaultTableModel) lastOrderTAbel.getModel();
    }
    private double getSum(){
       
        double rowcount = lastOrderTAbel.getRowCount();
        double sum= 0;
        for(double i = 0 ; i < rowcount; i++){
            sum = sum+Double.parseDouble(lastOrderTAbel.getValueAt((int) i, 9).toString());
        }
        return sum;
    }
    public float getAverage(){
        float sum  = (float) getSum();
        double rowsCount = lastOrderTAbel.getRowCount();
        float average = (float) (sum/rowsCount);
        return average;
    }
    
   public void getMax(){
     
       ArrayList<Double> list = new ArrayList<>();
       for(double i=0; i < lastOrderTAbel.getRowCount(); i++){
           list.add(Double.parseDouble(lastOrderTAbel.getValueAt((int) i, 9).toString()));
       }
       double max = Collections.max(list);
       double min = Collections.min(list);
       
       jLabel6.setText(Double.toString(max));
       jLabel7.setText(Double.toString(min));
   }
     private void loadAllSaveOrder(){
      
        
        DefaultTableModel dtm = (DefaultTableModel) lastOrderTAbel.getModel();
        dtm.setRowCount(0);

        try {
            List<LasetOrderSaveDTO> SenterDTOs = ManageLastOrderSaveController.getAllLastOrderSaves();

            if (SenterDTOs == null) {
                return;
            }

            for (LasetOrderSaveDTO lasetOrderSaveDTO : SenterDTOs) {
                Object[] rowData = {
                    lasetOrderSaveDTO.getSaveOrderId(),
                    lasetOrderSaveDTO.getSumbitOrderID(),
                    lasetOrderSaveDTO.getOrderID(),
                    lasetOrderSaveDTO.getCustomerID(),
                    lasetOrderSaveDTO.getTeleponrOPerterName(),
                    lasetOrderSaveDTO.getRiderName(),
                    lasetOrderSaveDTO.getGetOrderTime(),
                    lasetOrderSaveDTO.getOutOrderTime(),
                    lasetOrderSaveDTO.getPayament(),
                    lasetOrderSaveDTO.getTotal(),
                    lasetOrderSaveDTO.getDate()
                   
                };
                dtm.addRow(rowData);
                
               // ArrayList<TakeOrderDTO> list =takeOrderDTO.?uComboBox2.getSelectedItem());
            }

        } catch (Exception ex) {
            Logger.getLogger(SaveOrdersDitels.class.getName()).log(Level.SEVERE, null, ex);
        }

 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lastOrderTAbel = new javax.swing.JTable();
        jCalendarCombo1 = new org.freixas.jcalendar.JCalendarCombo();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lastOrderTAbel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SaveOrderId", "SumbitOrderID", "OrderID", "CustomerID", "TeleponrOPerterName", "RiderName", "GetOrderTime", "OutOrderTime", "Payament", "Total", "date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lastOrderTAbel);
        if (lastOrderTAbel.getColumnModel().getColumnCount() > 0) {
            lastOrderTAbel.getColumnModel().getColumn(5).setPreferredWidth(12);
            lastOrderTAbel.getColumnModel().getColumn(10).setMinWidth(20);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1130, 520));
        add(jCalendarCombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 220, 30));

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 100, 30));

        jButton2.setText("Show report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(804, 620, 160, 40));

        jButton3.setText("Save Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(975, 618, 140, 40));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("All Total");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, 60, 30));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("All Total");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 620, 100, 30));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Average");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 600, -1, 70));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setText("Average");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 610, -1, 50));

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setText("Max");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 620, -1, 30));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Max");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 610, 70, 50));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Min");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 620, 70, 30));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel8.setText("Min");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 620, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      try {
            JasperReport comJasperReport = (JasperReport)JRLoader.loadObject(SaveOrdersDitels.class.getResource("/lk/ijse/DiliverySystem/Jasperrepors/Blank_A4_1.jasper"));
            JasperPrint filledReport = JasperFillManager.fillReport(comJasperReport, new HashMap<>(),new JRTableModelDataSource(lastOrderTAbel.getModel()));
            JFileChooser fileChooser = new JFileChooser();

            fileChooser.setAcceptAllFileFilterUsed(false);
            fileChooser.setFileFilter(new FileNameExtensionFilter("HTML Files('.html)", "html"));
            fileChooser.showSaveDialog(this);

            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            filePath+=".html";
            JasperExportManager.exportReportToHtmlFile(filledReport,filePath);

        } catch (JRException ex) {
            Logger.getLogger(SaveOrdersDitels.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         try {
            JasperReport comJasperReport = (JasperReport)JRLoader.loadObject(SaveOrdersDitels.class.getResource("/lk/ijse/DiliverySystem/Jasperrepors/Blank_A4_1.jasper"));
                                                                                                                                                                                
            JasperPrint filledReport = JasperFillManager.fillReport(comJasperReport, new HashMap<>(),new JRTableModelDataSource(lastOrderTAbel.getModel()));
            mypanel MyjViewer = new mypanel(filledReport);
            MyjViewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(SaveOrdersDitels.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      String Date  = jCalendarCombo1.getSelectedItem().toString();
     
              
     
        DefaultTableModel dtm = (DefaultTableModel) lastOrderTAbel.getModel();
        dtm.setRowCount(0);

             try {

             
            List<LasetOrderSaveDTO> SenterDTOs = ManageLastOrderSaveController.getAllDateSaveID(Date);
          System.out.print(Date);
            if (SenterDTOs == null) {
                return;
            }

            for (LasetOrderSaveDTO callSenterDTO : SenterDTOs) {
                Object[] rowData = {
                     callSenterDTO.getSaveOrderId(),
                    callSenterDTO.getSumbitOrderID(),
                    callSenterDTO.getOrderID(),
                    callSenterDTO.getCustomerID(),
                    callSenterDTO.getTeleponrOPerterName(),
                    callSenterDTO.getRiderName(),
                    callSenterDTO.getGetOrderTime(),
                    callSenterDTO.getOutOrderTime(),
                    callSenterDTO.getPayament(),
                    callSenterDTO.getTotal(),
                    callSenterDTO.getDate()
                };
                dtm.addRow(rowData);
            }
              jLabel2.setText(Double.toString(getSum()));
             jLabel3.setText(Float.toString(getAverage()));
             getMax();
        } catch (Exception ex) {
            Logger.getLogger(SaveOrdersDitels.class.getName()).log(Level.SEVERE, null, ex);
     }
              
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private org.freixas.jcalendar.JCalendarCombo jCalendarCombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable lastOrderTAbel;
    // End of variables declaration//GEN-END:variables




 private void loadAllDateSave(){

 }











}
