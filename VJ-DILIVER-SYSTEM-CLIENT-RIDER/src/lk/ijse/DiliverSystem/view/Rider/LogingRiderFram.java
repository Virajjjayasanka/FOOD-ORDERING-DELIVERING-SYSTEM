/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.DiliverSystem.view.Rider;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.DiliverSystem.controller.ManageLoginRiderController;
import lk.ijse.DiliverSystem.controller.ManageRiderController;
import lk.ijse.DiliverSystem.dto.DiliveryRiderDTO;
import lk.ijse.DiliverSystem.dto.LoginRiderDTO;
import static lk.ijse.DiliverSystem.view.Rider.MainPanelRider.TimeLabel;

/**
 *
 * @author Viraj jayasanka
 */
public class LogingRiderFram extends javax.swing.JFrame {

    /**
     * Creates new form LogingRiderFram
     */
    public LogingRiderFram(java.awt.Frame parent, boolean modal) {
        initComponents();
        
        setSize(422, 333);
        setLocationRelativeTo(null);
        loadData();
    }
    private void loadData(){
        try{
            ArrayList<DiliveryRiderDTO> allItem =(ArrayList<DiliveryRiderDTO>) ManageRiderController.getAllDiliverRiders();
            if(allItem == null){
             return ;
            }
            for(DiliveryRiderDTO item :allItem){
                Object[]rowData ={item.getId()};
                jComboBox1.addItem(""+item.getId());
            }
            
        } catch (Exception ex) {
            Logger.getLogger(getOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JTextField();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("Select Rideraname");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Password");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setText("ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jTextField2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 200, 30));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 200, -1));

        jButton1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton1.setText("loging");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 100, 30));

        jButton2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton2.setText("Cancel");
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 90, 30));

        jLabel5.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jLabel5.setText("Loging Divery Rider");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jLabel6.setText("Image");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 200, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 330));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //String username = UserNameText.getText();
        String password = jTextField2.getText();
        if (password.equals("1234")) {
          
           
            this.dispose();
        } else {
            JOptionPane.showConfirmDialog(this, "user Or Passoword is Incorrect");
        }
        
        LoginRiderDTO loginRiderDTO = new LoginRiderDTO(
               
               Integer.parseInt(jComboBox1.getSelectedItem().toString()),
               jLabel4.getText(),
               jTextField2.getText(),
               TimeLabel.getText()
       
       );

        try {
            boolean reslat = ManageLoginRiderController.addLoginRider(loginRiderDTO);
            
           if(reslat){
               JOptionPane.showMessageDialog(this,"Rider Is Loging...........");
           }else{
                JOptionPane.showMessageDialog(this,"Rider Is Loging...........");
           }
        } catch (Exception e) {
        } 
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
            
try {
            int qid =  Integer.parseInt((String) jComboBox1.getSelectedItem()) ;

            DiliveryRiderDTO findquestion = ManageRiderController.findRider(qid);
            
            jLabel4.setText(findquestion.getRiderNAme());
            
  //          txtAns1.setText(findquestion.getAnswerOne());
//           txtAns2.setText(findquestion.getAnswerTwo());
//           txtAns3.setText(findquestion.getAnswerThree());
//           txtAns4.setText(findquestion.getAnswerFour());
//           cmbCorrectAnswer.setSelectedItem(findquestion.getCorrectAnswer());

        } catch (Exception ex) {
            Logger.getLogger(LogingRider.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
private void loadRider(){
        try{
            ArrayList<DiliveryRiderDTO> allItem =(ArrayList<DiliveryRiderDTO>) ManageRiderController.getAllDiliverRiders();
            if(allItem == null){
             return ;
            }
            for(DiliveryRiderDTO item :allItem){
                Object[]rowData ={item.getId()};
                jComboBox1.addItem(""+item.getId());
            }
        } catch (Exception ex) {
            Logger.getLogger(LogingRider.class.getName()).log(Level.SEVERE, null, ex);
        }
}




}
